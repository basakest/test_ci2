name: build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: casbin
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php: [ 7.2, 7.3 ]
        stability: [ prefer-lowest, prefer-stable ]            

    name: PHP ${{ matrix.php }} - ${{ matrix.stability }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: create db_rules table
      #   run: |
      #     sudo apt-get install -y mysql-client
      #     mysql --host 127.0.0.1 --port 3306 -u root -p -e "USE casbin; CREATE TABLE  if not exists  db_rules (
      #       id BigInt(20) unsigned NOT NULL AUTO_INCREMENT,
      #       ptype varchar(255) DEFAULT NULL,
      #       v0 varchar(255) DEFAULT NULL,
      #       v1 varchar(255) DEFAULT NULL,
      #       v2 varchar(255) DEFAULT NULL,
      #       v3 varchar(255) DEFAULT NULL,
      #       v4 varchar(255) DEFAULT NULL,
      #       v5 varchar(255) DEFAULT NULL,
      #       PRIMARY KEY (id)
      #       ) ENGINE=InnoDB  DEFAULT CHARSET=utf8mb4"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          tools: composer:v2
          coverage: xdebug

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: |
          composer install --prefer-dist --no-progress --no-suggest

      - name: Run test suite
        run: ./vendor/bin/phpunit

      - name: Run Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: ${{ runner.os }} - ${{ matrix.php }}
        run: |
          composer global require php-coveralls/php-coveralls:^2.4
          php-coveralls --coverage_clover=build/logs/clover.xml -v

  upload-coverage:
    runs-on: ubuntu-latest
    needs: [ test ]
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  semantic-release:
    runs-on: ubuntu-latest
    needs: [ test, upload-coverage ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Run semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release